Test#,Setup,Instruction_Type,Assembly,Hex,Expected_Result,Registers_Affected,Memory_Affected
1a,"t1=10
t2=2",R-type,"add $t0, $t1, $t2",0x012A4020,$t0 = $t1 + $t2 ,$t0 (12),None
1b,"t1=10
t2=-2",R-type,"add $t0, $t1, $t2",0x012A4020,$t0 = $t1 + $t2 ,$t0 (8),None
2a,t0=2,I-type,"addi $t0, $zero, 12",,$t0 = $0 + 12,$t0 (14),None
2b,t0=-5,I-type,"addi $9, �$zero, -5",,$t0 = $0 + (-5),$t1 (-5),None
2c,t0=0,I-type,"addi $t0, $zero, 10",0x2008000A,$t0 = 0 + 10,$t0 (10),None
2d,t0=10,I-type,"addi $t1, $t0, -5",0x2109FFFB,$t1 = $t0 - 5,$t1 (5),None
3a,"t1=-10
t2=2",R-type,"sub $t0, $t1, $t2",,$t0 = $t1 - $t2,$t0 (-12),None
3b,"t4=10
t5=2",R-type,"sub $t3, $t4, $t5",,$t3 = $t4 - $t5,$t3 (8),None
4a,"t8=-2
t7=-15",R-type,"mult $t8, $t7",,HI:LO = $t8 * $t7,"HI, LO(30)",None
4b,"t0=4
t1=2",R-type,"mult $t0, $t1",0x01090018,HI:LO = $t0 * $t1,"HI, LO(8)",None
5a,"t2=11
t3=4",R-type,"div $t2, $t3",0x014B001A,,"HI (3), LO (2)",None
5b,,R-type,"div $t2, $t3",,,,
6a (for 4a),LO=2,R-type,mflo $t0,,,,
6b (for 4b),LO=?,R-type,mflo $t1,,,,
7a (for 5a),HI=3,R-type,mfhi $t2,,,,
7b (for 5b),HI=0,R-type,mfhi $t3,,,,
8a,,R-type,x,,,,
8b,,R-type,"sll $t1, $t2, 4",0x000A4900,$t1 = $t2 << 4,$t1,None
9a,,R-type,srl,,,,
9b,,R-type,"srl $t3, $t4, 8",0x000C5A02,$t3 = $t4 >> 8,$t3,None
10a,,R-type,slt,,,,
10b,,R-type,slt,,,,
11a,,R-type,and,,,,
11b,,R-type,and,,,,
12a,,I-type,andi,,,,
12b,,I-type,andi,,,,
13a,,R-type,or,,,,
13b,,R-type,or,,,,
14a,,I-type,ori,,,,
14b,,I-type,ori,,,,
15a,,R-type,xor,,,,
15b,,R-type,xor,,,,
16a,,I-type,xori,,,,
16b,,I-type,xori,,,,
17a,,R-type,nor,,,,
17b,,R-type,nor,,,,
18a,,I-type,lui,,,,
18b,,I-type,lui,,,,
,,,,,,,
,,,,,,,
,,,,,,,
,,,,,,,
,,,,,,,
9,,R-type,"div $t2, $t3",0x014B001A,"LO = $t2 / $t3, HI = $t2 % $t3","HI, LO",None
17,,Edge,"add $zero, $t0, $t1",0x01090020,$zero should remain 0,None,None
18,,Edge,"addi $t0, $t0, 0x7FFF",0x21087FFF,Test max positive immediate,$t0,None
19,,Edge,"addi $t0, $t0, 0x8000",0x21088000,Test min negative immediate,$t0,None
20,,Star,,,,,
21,,R-type*,"and $s0, $s1, $s2",0x02328024,$s0 = $s1 & $s2,$s0,None
22,,R-type*,"or $s3, $s4, $s5",0x02959825,$s3 = $s4 | $s5,$s3,None
,,,,,,,
,,R-type*,"and $t2, $t0, $t1",,,,










6a,$s0=10; $s1=3; HI=0; LO=0,R-type,div $s0, $s1, —,LO=$s0/$s1=3; HI=$s0%$s1=1,LO(3),HI(1),None
6b,$s0=-10; $s1=3; HI=0; LO=0,R-type,div $s0, $s1, —,LO=-3; HI=-1,LO(-3),HI(-1),None
6c,$s0=10; $s1=-3; HI=0; LO=0,R-type,div $s0, $s1, —,LO=-3; HI=1,LO(-3),HI(1),None
6d,$s0=-10; $s1=-3; HI=0; LO=0,R-type,div $s0, $s1, —,LO=3; HI=-1,LO(3),HI(-1),None
6e,$s0=1234; $s1=0; HI=0xAAAA_BBBB; LO=0xCCCC_DDDD,R-type,div $s0, $s1, —,Divide-by-zero → UNPREDICTABLE; assume HI/LO unchanged,LO(unchanged),HI(unchanged),None

7a,HI=0; LO=0x0000002A,R-type,mflo $t0, —,$t0=LO=0x2A,$t0(0x2A),None
7b,HI=0x00000099; LO=0,R-type,mfhi $t1, —,$t1=HI=0x99,$t1(0x99),None

8a,$t0=0x00000003,R-type,sll $t1,$t0,4, —,$t1=0x00000030,$t1(0x30),None
8b,$t0=0x00000001,R-type,sll $t1,$t0,31, —,$t1=0x80000000,$t1(0x80000000),None
8c,$t0=0xF0000001 (as unsigned pattern),R-type,sll $t1,$t0,1, —,$t1=0xE0000002 (low bit drops),$t1(0xE0000002),None
8d,$t0=0x12345678,R-type,sll $t1,$t0,0, —,$t1=$t0 (no change),$t1(0x12345678),None

9a,$t0=0x80000000,R-type,srl $t1,$t0,1, —,$t1=0x40000000,$t1(0x40000000),None
9b,$t0=0x00000001,R-type,srl $t1,$t0,1, —,$t1=0x00000000,$t1(0),None
9c,$t0=0xFFFFFFFF,R-type,srl $t1,$t0,4, —,$t1=0x0FFFFFFF,$t1(0x0FFFFFFF),None
9d,$t0=0x89ABCDEF,R-type,srl $t1,$t0,31, —,$t1=0x00000001,$t1(1),None

10a,$t0=-1; $t1=1,R-type,slt $t2,$t0,$t1, —,$t2=1 (since -1<1),$t2(1),None
10b,$t0=5; $t1=-3,R-type,slt $t2,$t0,$t1, —,$t2=0,$t2(0),None
10c,$t0=7; $t1=7,R-type,slt $t2,$t0,$t1, —,$t2=0,$t2(0),None

11a,$t0=0xF0F0F0F0; $t1=0x0F0F0F0F,R-type,and $t2,$t0,$t1, —,$t2=0x00000000,$t2(0),None
11b,$t0=0xFFFF0000; $t1=0x00FF00FF,R-type,and $t2,$t0,$t1, —,$t2=0x00FF0000,$t2(0x00FF0000),None

12a,$t0=0x12345678,I-type,andi $t1,$t0,0x00F0, —,$t1=0x00000070 (zero-extend imm),$t1(0x70),None
12b,$t0=0xFFFF00FF,I-type,andi $t1,$t0,0xFF00, —,$t1=0x00000000 (AND with 0xFF00),$t1(0),None
12c,$t0=0x0000FFFF,I-type,andi $t1,$t0,0x00FF, —,$t1=0x000000FF,$t1(0xFF),None

13a,$t0=0xF0F0F0F0; $t1=0x0F0F0F0F,R-type,or $t2,$t0,$t1, —,$t2=0xFFFFFFFF,$t2(0xFFFFFFFF),None
13b,$t0=0x12340000; $t1=0x00005678,R-type,or $t2,$t0,$t1, —,$t2=0x12345678,$t2(0x12345678),None

14a,$t0=0x12340000,I-type,ori $t0,$t0,0x5678, —,$t0=0x12345678 (form 32-bit const),$t0(0x12345678),None
14b,$t1=0xFFFF0000,I-type,ori $t2,$t1,0x00FF, —,$t2=0xFFFF00FF (imm zero-extended),$t2(0xFFFF00FF),None

15a,$t0=0xAAAA5555; $t1=0x00FF00FF,R-type,xor $t2,$t0,$t1, —,$t2=0xAA55 55AA,$t2(0xAA5555AA),None
15b,$t0=0xFFFFFFFF; $t1=0x0,R-type,xor $t2,$t0,$t1, —,$t2=0xFFFFFFFF,$t2(0xFFFFFFFF),None

16a,$t0=0xAAAA5555,I-type,xori $t1,$t0,0x00FF, —,$t1=0xAAAA55AA (imm zero-extended),$t1(0xAAAA55AA),None
16b,$t0=0x0000FFFF,I-type,xori $t1,$t0,0xFFFF, —,$t1=0x00000000,$t1(0),None

17a,$t0=0x12345678; $t1=0x0,R-type,nor $t2,$t0,$t1, —,$t2=~(0x12345678|0)=0xEDCBA987,$t2(0xEDCBA987),None
17b,$t0=0xFFFFFFFF; $t1=0xFFFFFFFF,R-type,nor $t2,$t0,$t1, —,$t2=0x00000000,$t2(0),None

18a,—,I-type,lui $t0,0x1234, —,$t0=0x12340000,$t0(0x12340000),None
18b,$t0=0; (then check pairing),I-type,lui $t0,0xABCD; ori $t0,$t0,0x00EF, —,$t0=0xABCD00EF (two-instr const),$t0(0xABCD00EF),None
